user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on; # tcp_nopush optimizes file transmission for large files with sendfile.
    #tcp_nodelay    on; # tcp_nodelay sends small packets immediately, useful for low-latency needs.

    # type_hash_max_size sets the maximum size of the hash table for server names and MIME types.
    # Increase this value if you have a large number of server_name entries or MIME types.
    #types_hash_max_size 2048;

    keepalive_timeout  65;

    # Gzip Settings
    gzip_types text/css text/scss text/plain text/xml application/xml application/json application/javascript;
    gzip on;

    # SSL Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    resolver 127.0.0.11 valid=30s;

    # websocket upgrade
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    map $sent_http_content_type $content_type_csp {
        default "";
        ~image/ "default-src 'none'";
    }

    # Redirect all HTTP traffic to HTTPS for all domains
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        # Certbot challenges for Let's Encrypt
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Redirect other HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    include /etc/nginx/conf.d/*.conf;

    # Catch-all server block for undefined domains.
    server {
        listen 443 ssl default_server;
        listen [::]:443 ssl default_server;
        server_name _;

        # Self-signed or Let's Encrypt certificates
        include /etc/nginx/conf.d/ssl/external_portal.example.com.include;

        return 301 https://portal.example.com; # z.B. portal.example.com ([TODO]may have certificate issue)
        #return 444;   # Drop the connection without a response
    }
}

