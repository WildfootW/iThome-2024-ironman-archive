services:
  volumerize:
    build: ./volumerize/source #    image: blacklabelops/volumerize
    restart: unless-stopped
    profiles:
      - deployment
    volumes:
      - odoo-dev-data:/source/odoo-dev-data:ro
      - db-dev-data:/source/db-dev-data:ro
      - odoo-prod-data:/source/odoo-prod-data:ro
      - db-prod-data:/source/db-prod-data:ro
      - ./backup:/backup  # Use a folder for backups
      - volumerize-cache:/volumerize-cache  # Cache for Duplicity
    environment:
      - VOLUMERIZE_SOURCE=/source
      - VOLUMERIZE_TARGET=file:///backup
      - VOLUMERIZE_JOBBER_TIME=0 0 * * * *    # Hourly incremental backups
      - VOLUMERIZE_FULL_IF_OLDER_THAN=1D      # Daily full backups
      - REMOVE_OLDER_THAN=7D                  # Remove backups older than 7 days
      - TZ=Asia/Taipei

  volumerize-restore:
    build: ./volumerize/source
    restart: no  # Don't restart this service by default
    profiles: # Use a profile to control when this service should be started
      - restore
    network_mode: none # Disable network to avoid "network not found" errors when bringing up this container
    volumes:
      - odoo-dev-data:/source/odoo-dev-data
      - db-dev-data:/source/db-dev-data
      - odoo-prod-data:/source/odoo-prod-data
      - db-prod-data:/source/db-prod-data
      - ./backup:/backup  # Use a folder for backups
      - volumerize-cache:/volumerize-cache  # Cache for Duplicity
    environment:
      - VOLUMERIZE_SOURCE=/source
      - VOLUMERIZE_TARGET=file:///backup
      - VOLUMERIZE_JOBBER_TIME=0 0 * * * *    # Hourly incremental backups
      - VOLUMERIZE_FULL_IF_OLDER_THAN=1D      # Daily full backups
      - REMOVE_OLDER_THAN=7D                  # Remove backups older than 7 days
      - TZ=Asia/Taipei
    command: restore -t 2024-10-11T23:49:18+08:00

  fail2ban:
    build: ./fail2ban/source
    restart: always
    profiles:
      - deployment
    cap_add:
      - NET_ADMIN
      - NET_RAW
    volumes:
      - ./fail2ban/filter.d:/data/filter.d:ro
      - ./fail2ban/jail.d:/data/jail.d:ro
      - ./odoo-dev/logs:/var/log/odoo-dev:ro
      - ./odoo-prod/logs:/var/log/odoo-prod:ro
    environment:
      - TZ=UTC
    network_mode: host # Use host network mode to allow direct access to the host's network for monitoring and firewall management.

  reverse-proxy:
    build: ./reverse-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # Mount the main Nginx configuration file
      #- ./reverse-proxy/nginx.conf:/etc/nginx/nginx.conf
      # Mount additional Nginx configuration files
      #- ./reverse-proxy/conf.d:/etc/nginx/conf.d
      # Mount custom error pages
      #- ./reverse-proxy/html:/usr/share/nginx/html

      # SSL/TLS certificates for both Let's Encrypt and self-signed certificates
      - ./config/certs/letsencrypt:/etc/nginx/certs/letsencrypt:ro
      - ./config/certs/self-signed:/etc/nginx/certs/self-signed:ro
      # Temporary storage for Certbot challenge files
      - certbot-challenge:/var/www/certbot

      # Mount odoo static files for serving (handling static assets like JS, CSS)
      - ./odoo-dev/source/addons:/opt/odoo-dev/addons:ro
      - ./odoo-dev/source/odoo:/opt/odoo-dev/core:ro
      - ./odoo-prod/source/addons:/opt/odoo-prod/addons:ro
      - ./odoo-prod/source/odoo:/opt/odoo-prod/core:ro
      # Mount odoo filestore for attachments (for serving attachments via X-Accel)
      - odoo-dev-data:/opt/odoo-dev/filestore:ro
      - odoo-prod-data:/opt/odoo-prod/filestore:ro
    networks:
      - prod-net
      - dev-net

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    profiles:
      - deployment
    volumes:
      - ./config/certs/letsencrypt:/etc/letsencrypt
      - certbot-challenge:/var/www/certbot
    entrypoint: /bin/sh -c "trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot --quiet; sleep 12h; done"

  static-brand:
    image: nginx:1.27-alpine-slim
    restart: always
    networks:
      - prod-net
    volumes:
      # Serve static files for the brand website
      - ./static-brand/source:/usr/share/nginx/html

  postgresql-admin:
    image: dpage/pgadmin4:8.10
    restart: always
    networks:
      - prod-net
      - dev-net
    env_file:
      - ./config/pgadmin.env
    volumes:
      - ./postgresql-admin/servers.json:/pgadmin4/servers.json
      - db-admin-data:/var/lib/pgadmin # Persist pgAdmin's configuration data
    # PgAdmin service for managing both production and development PostgreSQL instances

  postgresql-prod:
    image: postgres:16.4
    restart: always
    networks:
      - prod-net
    env_file:
      - ./config/prod.env
    environment:
      - POSTGRES_DB=postgres # can't modify due to issue: https://github.com/odoo/odoo/issues/182551
    volumes:
      # Persist data for the production PostgreSQL instance
      - db-prod-data:/var/lib/postgresql/data

  postgresql-dev:
    image: postgres:16.4
    restart: always
    networks:
      - dev-net
    env_file:
      - ./config/dev.env
    environment:
      - POSTGRES_DB=postgres # can't modify due to issue: https://github.com/odoo/odoo/issues/182551
    volumes:
      # Persist data for the development PostgreSQL instance
      - db-dev-data:/var/lib/postgresql/data

  odoo-prod:
    build: ./odoo-prod/source
    restart: always
    depends_on:
      - postgresql-prod
    networks:
      - prod-net
    env_file:
      - ./config/prod.env
    environment:
      - CONF_OVERRIDE_WITH_SECURE=true  # Set to enable merging of config files
    volumes:
      - odoo-prod-data:/var/lib/odoo # Persistent volume for data and attachments
      - ./odoo-prod/logs:/var/log/odoo # Persist logs for the production Odoo instance
      - ./odoo-prod/odoo-general.conf:/etc/odoo/odoo-general.conf  # General config file
      - ./config/odoo-prod-sensitive.conf:/etc/odoo/odoo-sensitive.conf  # Sensitive config file with passwords


  odoo-dev:
    build: ./odoo-dev/source
    restart: always
    depends_on:
      - postgresql-dev
    networks:
      - dev-net
    env_file:
      - ./config/dev.env
    environment:
      - CONF_OVERRIDE_WITH_SECURE=true  # Set to enable merging of config files
    volumes:
      - odoo-dev-data:/var/lib/odoo # Persistent volume for data and attachments
      - ./odoo-dev/logs:/var/log/odoo # Host directory for logs
      - ./odoo-dev/odoo-general.conf:/etc/odoo/odoo-general.conf  # General config file
      - ./config/odoo-dev-sensitive.conf:/etc/odoo/odoo-sensitive.conf  # Sensitive config file with passwords
      ## Mount the development Odoo source code and custom addons
      #- ./odoo-dev/odoo-dev:/mnt/odoo

networks:
  prod-net:
    driver: bridge
  dev-net:
    driver: bridge

volumes:
  # Volumes for persisting database data
  db-prod-data:
  odoo-prod-data:
  db-dev-data:
  odoo-dev-data:
  db-admin-data:
  volumerize-cache:
  certbot-challenge:

